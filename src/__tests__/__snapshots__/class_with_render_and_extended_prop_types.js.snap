// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class_with_render_and_extended_prop_types 1`] = `
"\\"use strict\\";

var _react = _interopRequireDefault(require(\\"react\\"));

var _types = require(\\"./types\\");

var _propTypes = _interopRequireDefault(require(\\"prop-types\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\"Cannot call a class as a function\\"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== \\"function\\" && superClass !== null) { throw new TypeError(\\"Super expression must either be null or a function\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var C =
/*#__PURE__*/
function (_React$Component) {
  _inherits(C, _React$Component);

  function C(props) {
    var _this;

    _classCallCheck(this, C);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(C).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \\"render\\", function () {
      return _react.default.createElement(\\"div\\", null);
    });

    return _this;
  }

  C.propTypes = Object.assign({}, _types.bpfrpt_proptype_Props === _propTypes.default.any ? {} : _types.bpfrpt_proptype_Props, {});
  return C;
}(_react.default.Component);

_defineProperty(C, \\"propTypes\\", Object.assign({}, _types.bpfrpt_proptype_Props === _propTypes.default.any ? {} : _types.bpfrpt_proptype_Props, {}));"
`;
